@using Microsoft.AspNetCore.Identity
@using Catchsmart.Areas.Identity.Data
@using Microsoft.EntityFrameworkCore
@using System.Text

@inject SignInManager<CatchsmartUser> SignInManager
@inject UserManager<CatchsmartUser> UserManager
@inject CatchsmartIdentityDbContext Db

@{
    var user = await UserManager.GetUserAsync(User);
    var username = (user != null ? user.Name : UserManager.GetUserName(User)) ?? "user";
    var avatar = user != null ? await Db.Avatars.FirstOrDefaultAsync(x => x.Id == user!.AvatarId) : null;
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if (avatar != null)
    {
        <img src=@Encoding.ASCII.GetString(avatar.AvatarBlobBytes) style="width: 40px; height: 40px; border-radius: 3px" alt="avatar">
    }
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @username</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
